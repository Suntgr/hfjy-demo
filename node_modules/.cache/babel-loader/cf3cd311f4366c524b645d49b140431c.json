{"remainingRequest":"/Users/zhangyang/hfjy/hfjy-demo/node_modules/babel-loader/lib/index.js!/Users/zhangyang/hfjy/hfjy-demo/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangyang/hfjy/hfjy-demo/src/components/toast/index.js","dependencies":[{"path":"/Users/zhangyang/hfjy/hfjy-demo/src/components/toast/index.js","mtime":1543163753109},{"path":"/Users/zhangyang/hfjy/hfjy-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangyang/hfjy/hfjy-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangyang/hfjy/hfjy-demo/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import vue from 'vue';\nimport toastComponent from './toast.vue'; // 返回一个 扩展实例构造器\n\nvar ToastConstructor = vue.extend(toastComponent); // 定义弹出组件的函数 接收2个参数, 要显示的文本 和 显示时间\n\nfunction showToast(text) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2500;\n  var toastDom = new ToastConstructor({\n    el: document.createElement('div'),\n    data: function data() {\n      return {\n        text: text,\n        showWrap: true,\n        // 是否显示组件\n        showContent: true // 作用:在隐藏组件之前,显示隐藏动画\n\n      };\n    }\n  });\n  document.body.appendChild(toastDom.$el); // 提前 250ms 执行淡出动画(因为我们再css里面设置的隐藏动画持续是250ms)\n\n  setTimeout(function () {\n    toastDom.showContent = false;\n  }, duration - 1250); // 过了 duration 时间后隐藏整个组件\n\n  setTimeout(function () {\n    toastDom.showWrap = false;\n  }, duration);\n} // 注册为全局组件的函数\n\n\nfunction registryToast() {\n  // 将组件注册到 vue 的 原型链里去,\n  vue.prototype.$toast = showToast;\n}\n\nexport default registryToast;",{"version":3,"sources":["/Users/zhangyang/hfjy/hfjy-demo/src/components/toast/index.js"],"names":["vue","toastComponent","ToastConstructor","extend","showToast","text","duration","toastDom","el","document","createElement","data","showWrap","showContent","body","appendChild","$el","setTimeout","registryToast","prototype","$toast"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,cAAP,MAA2B,aAA3B,C,CAEA;;AACA,IAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,CAAWF,cAAX,CAAzB,C,CAEA;;AACA,SAASG,SAAT,CAAmBC,IAAnB,EAA0C;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;AACxC,MAAMC,QAAQ,GAAG,IAAIL,gBAAJ,CAAqB;AACpCM,IAAAA,EAAE,EAAEC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CADgC;AAEpCC,IAAAA,IAFoC,kBAE7B;AACL,aAAO;AACLN,QAAAA,IAAI,EAACA,IADA;AAELO,QAAAA,QAAQ,EAAC,IAFJ;AAEa;AAClBC,QAAAA,WAAW,EAAC,IAHP,CAGa;;AAHb,OAAP;AAKD;AARmC,GAArB,CAAjB;AAUAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BR,QAAQ,CAACS,GAAnC,EAXwC,CAaxC;;AACAC,EAAAA,UAAU,CAAC,YAAM;AAACV,IAAAA,QAAQ,CAACM,WAAT,GAAuB,KAAvB;AAA6B,GAArC,EAAuCP,QAAQ,GAAG,IAAlD,CAAV,CAdwC,CAexC;;AACAW,EAAAA,UAAU,CAAC,YAAM;AAACV,IAAAA,QAAQ,CAACK,QAAT,GAAoB,KAApB;AAA0B,GAAlC,EAAoCN,QAApC,CAAV;AACD,C,CAGD;;;AACA,SAASY,aAAT,GAAyB;AACrB;AACAlB,EAAAA,GAAG,CAACmB,SAAJ,CAAcC,MAAd,GAAuBhB,SAAvB;AACH;;AAED,eAAec,aAAf","sourcesContent":["import vue from 'vue'\n\nimport toastComponent from './toast.vue'\n\n// 返回一个 扩展实例构造器\nconst ToastConstructor = vue.extend(toastComponent)\n\n// 定义弹出组件的函数 接收2个参数, 要显示的文本 和 显示时间\nfunction showToast(text, duration = 2500) {\n  const toastDom = new ToastConstructor({\n    el: document.createElement('div'),\n    data() {\n      return {\n        text:text,\n        showWrap:true,    // 是否显示组件\n        showContent:true  // 作用:在隐藏组件之前,显示隐藏动画\n      }\n    }\n  })\n  document.body.appendChild(toastDom.$el)\n\n  // 提前 250ms 执行淡出动画(因为我们再css里面设置的隐藏动画持续是250ms)\n  setTimeout(() => {toastDom.showContent = false} ,duration - 1250)\n  // 过了 duration 时间后隐藏整个组件\n  setTimeout(() => {toastDom.showWrap = false} ,duration)\n}\n\n\n// 注册为全局组件的函数\nfunction registryToast() {\n    // 将组件注册到 vue 的 原型链里去,\n    vue.prototype.$toast = showToast\n}\n\nexport default registryToast\n"]}]}